# -*- coding: utf-8 -*-
"""Polynomial_Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kVUyGoigUW1imRn5JhqW5AkF7ZXH9y_n

# **Importing the libraries**
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""# **Importing the dataset**"""

df = pd.read_csv('Position_Salaries.csv')
x = df.iloc[:,1:-1].values
y = df.iloc[:,-1].values

"""# **Training the linear regression model on the whole dataset**"""

from sklearn.linear_model import LinearRegression
lr= LinearRegression()
lr.fit(x,y)

"""# **Training the polynomial regression model on the whole dataset**"""

from sklearn.preprocessing import PolynomialFeatures
poly_reg = PolynomialFeatures(degree = 4)
x_poly= poly_reg.fit_transform(x)
lin_reg2 = LinearRegression()
lin_reg2.fit(x_poly , y)

"""# **Visualising the linear regression results**"""

plt.scatter(x,y, color = "red")
plt.plot(x, lr.predict(x),color="blue")
plt.title('Truth or Bluff (linear Regression)')
plt.xlabel('Position level')
plt.ylabel('Salary')
plt.show()

"""# **Visualising the polynomial regression results (for higher resolution and smoother curve)**"""

x_grid = np.arange(min(x), max(x), 0.1)
x_grid = x_grid.reshape((len(x_grid),1))
plt.scatter(x,y, color = 'red')
plt.plot(x_grid,lin_reg2.predict(poly_reg.fit_transform(x_grid)),color='blue')
plt.title('Truth or Buff (polynomial Regression)')
plt.xlabel('Position level')
plt.ylabel('Salary')
plt.show()

"""# **Predicting a new result with linear regression**"""

lr.predict([[6.5]])

"""# **Predicting a new result with polynomial regression**"""

lin_reg2.predict(poly_reg.fit_transform([[6.5]]))

