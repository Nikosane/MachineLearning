# -*- coding: utf-8 -*-
"""support_vector_regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z_pP29pI2SGLJOGTVouEc6EsxtAXnmia

# **import libraries**
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""# **load the cvs data**"""

df = pd.read_csv('Position_Salaries.csv')
df

x = df.iloc[:,1:-1].values
y = df.iloc[:,-1].values

y = y.reshape(len(y),1)

"""# **Feature Scaling**"""

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
sc_x = StandardScaler()
sc_y = StandardScaler()
x = sc_x.fit_transform(x)
y = sc_y.fit_transform(y)

x

y

"""# **Training the SVR model on the whole data set**"""

from sklearn.svm import SVR
sv = SVR(kernel='rbf')

regressor = sv.fit(x, y)

"""# **Predicting the Value**"""

# print(regressor.predict(sc_x.transform([[6.5]])).reshape(-1,1))
value = sc_y.inverse_transform(regressor.predict(sc_x.transform([[6.5]])).reshape(-1,1))
value

"""# **Ploting the SVR result**"""

plt.scatter(sc_x.inverse_transform(x), sc_y.inverse_transform(y),color = "red")
plt.plot(sc_x.inverse_transform(x), sc_y.inverse_transform(regressor.predict(x).reshape(-1,1)), color = "blue")
plt.title("truth or bluff(SVR)")
plt.xlabel("level")
plt.ylabel("salary")

"""# **Visualising the SVR results in high resolution and higher curve**"""

x_grid = np.arange(min(sc_x.inverse_transform(x)), max(sc_x.inverse_transform(x)), 0.1)
x_grid = x_grid.reshape(len(x_grid),1)
plt.scatter(sc_x.inverse_transform(x), sc_y.inverse_transform(y),color = "red")
plt.plot(x_grid, sc_y.inverse_transform(regressor.predict(sc_x.transform(x_grid)).reshape(-1,1)), color = "blue")
plt.title("truth or bluff(SVR)")
plt.xlabel("level")
plt.ylabel("salary")